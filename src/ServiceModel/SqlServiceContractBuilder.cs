using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace org.Core.ServiceModel
{
    /// <summary>
    /// 
    /// </summary>
    public sealed class SqlServiceContractBuilder
    {
        #region Constructors
        /// <summary>
        /// 
        /// </summary>
        public SqlServiceContractBuilder()
        {   
        }
        #endregion

        #region Fields
        readonly string _protocol           = "mssql";
        readonly string _configurationName  = "AUTOGENERATED.CONTRACT";
        #endregion

        #region Properties
        /// <summary>
        /// 
        /// </summary>
        public string DataSource
        {
            get;
            set;
        }

        /// <summary>
        /// 
        /// </summary>
        public string InitialCatalog
        {
            get;
            set;
        }

        /// <summary>
        /// 
        /// </summary>
        public string UserID
        {
            get;
            set;
        }

        /// <summary>
        /// 
        /// </summary>
        public string Password
        {
            get;
            set;
        }

        /// <summary>
        /// 
        /// </summary>
        public bool? AsynchronousProcessing
        {
            get;
            set;
        }

        /// <summary>
        /// 
        /// </summary>
        public bool? IntegratedSecurity
        {
            get;
            set;
        }

        /// <summary>
        /// 
        /// </summary>
        public bool? ConnectionTimeout
        {
            get;
            set;
        }

        /// <summary>
        /// 
        /// </summary>
        public Type Provider
        {
            get;
            set;
        }
        #endregion

        #region Methods
        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
        public IDataServiceContract GetDataServiceContract()
        {
            if (!string.IsNullOrEmpty(DataSource) && !string.IsNullOrEmpty(InitialCatalog))
            {
                var _connectionStringBuilder = new SqlConnectionStringBuilder();

                if (AsynchronousProcessing.HasValue)
                    _connectionStringBuilder.AsynchronousProcessing = AsynchronousProcessing.Value;

                if (IntegratedSecurity.HasValue)
                    _connectionStringBuilder["Integrated Security"] = IntegratedSecurity.Value;

                if (ConnectionTimeout.HasValue)
                    _connectionStringBuilder["Connection Timeout"] = ConnectionTimeout.Value;

                _connectionStringBuilder["User ID"]             = UserID;
                _connectionStringBuilder["Password"]            = Password;
                _connectionStringBuilder["Data Source"]         = DataSource;
                _connectionStringBuilder["Initial Catalog"]     = InitialCatalog;

                return new DataServiceContract(_configurationName, _connectionStringBuilder.ConnectionString, _protocol, Provider);
            }

            return null;
        }
        #endregion
    }
}
